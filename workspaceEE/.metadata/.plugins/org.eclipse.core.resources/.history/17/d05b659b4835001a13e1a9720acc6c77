
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

@Controller
public class extractClassInfo {
	File file = new File("..//classes.xml");
	connectToDatabase hero = new connectToDatabase();
	// A
	@RequestMapping(value = "/cheditor/api/addclass", method = RequestMethod.GET)
	public String addclass(@RequestParam(value = "cid",required = true) int cid,
						@RequestParam(value = "name",required = true) String name,
						@RequestParam(value = "abstract",required = false) boolean class_is_abstract,
						@RequestParam(value = "pid",required = false) int pid){
		try {
		} catch (SQLException e) {
			
		}
				String variable=null;
				PreparedStatement pstmt;
				//response in json.
				if(){
					return "{"+"\""+"ret"+"\""+":"+"\"true\""+"}";
				}
				else{
					return "{"+"\n"+"\""+"ret"+"\""+":"+"\"false\""+","+"\n"
				+"\""+"message"+":"+"\""+variable+"\"";
				}
				//JSON request.
					return "{"+"\n"+"\""+"cid"+"\""+cid+"\""+","+"\n"
				+"\""+"name"+"\""+":"+name+","+"\n"
					+"\""+"abstract"+"\""+":"+"\""+class_is_abstract+"\n"+"}";
	}
	
	// B 
	@RequestMapping(value = "/cheditor/api/getclass/{cid}", method=RequestMethod.GET)
	public String getInfo(@PathVariable("cid") int cid){
		//Get information from table for class variables name and class is abstract.
		//Json string
		if(){
			return "{"+"\n"+"\""+"cid"+"\""+cid+"\""+","+"\n"
					+"\""+"name"+"\""+":"+name+","+"\n"
						+"\""+"abstract"+"\""+":"+"\""+class_is_abstract+"\n"+"}";
		}
		else{
			return "{"+"\n"+"\""+"ret"+"\""+":"+"\"false\""+","+"\n"
					+"\""+"message"+":"+"\""+"cid "+cid+"doesnt exist"+"\"";
		}
	}
	
	// C
	@RequestMapping(value = "/cheditor/api/getclass/{cid}", method = RequestMethod.GET)
	public String deleteClass(@PathVariable("cid")int cid){
		
		
		if(){
			return "{"+"\""+"ret"+"\""+":"+"\"true\""+"}";
		}
		else{
			return "{"+"\n"+"\""+"ret"+"\""+":"+"\"false\""+","+"\n"
					+"\""+"message"+":"+"\""+"cid "+cid+"doesnt exist"+"\"";
		}
	}
	// D
	@RequestMapping(value = "/cheditor/api/superclasses/{cid}",method = RequestMethod.GET)
	public String getSuperClasses(@PathVariable("cid") int cid){
		if(){
			
		}
		else{
			return "{"+"\n"+"\""+"result"+"\""+":"+"\"false\""+","+"\n"
					+"\""+"message"+":"+"\""+"cid "+cid+"doesnt exist"+"\"";
		}
	}
	// E
	@RequestMapping(value = "/cheditor/api/subclasses/{cid}",method = RequestMethod.GET)
	public String getSubClasses(@PathVariable("cid") int cid){
		return "";
	}
	
}
